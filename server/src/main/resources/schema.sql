DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS bookings CASCADE;
DROP TABLE IF EXISTS comments CASCADE;

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description VARCHAR(1000),
    requestor_id BIGINT,
    created TIMESTAMP,
    FOREIGN KEY (requestor_id) references users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100),
    description VARCHAR(500),
    is_available BOOL,
    owner_id BIGINT,
    request_id INTEGER,
    FOREIGN KEY (owner_id) references users(id) ON DELETE CASCADE
--    FOREIGN KEY (request_id) references requests(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS bookings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date TIMESTAMP,
    end_date TIMESTAMP,
    item_id BIGINT,
    booker_id BIGINT,
    status VARCHAR(50),
    FOREIGN KEY (item_id) references items(id) ON DELETE CASCADE,
    FOREIGN KEY (booker_id) references users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text VARCHAR(1000),
    item_id BIGINT,
    author_id BIGINT,
    created TIMESTAMP,
    FOREIGN KEY (item_id) references items(id) ON DELETE CASCADE,
    FOREIGN KEY (author_id) references users(id) ON DELETE CASCADE
);